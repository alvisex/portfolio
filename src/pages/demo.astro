---
import Preloader from '../components/Preloader.astro'
import Layout from '../layouts/Layout.astro'

const items = [
  { title: 'Gitlab', text: 'Texto de la secci贸n' },
  { title: 'Citelis', text: 'Texto de la secci贸n', reversed: true },
  { title: 'Clout', text: 'Texto de la secci贸n', reversed: true },
  { title: 'Impronta ', text: 'Texto de la secci贸n' }
]
---

<Layout title="testing scene with hover">
  <div class="wrapper">
    <!--   <section>demo</section> -->
    <canvas id="canvas3dd"></canvas>
    <!-- <script type="module" src="https://unpkg.com/@splinetool/viewer@1.0.52/build/spline-viewer.js"></script>
    <spline-viewer url="https://prod.spline.design/ayNisUEENs-eGECw/scene.splinecode"></spline-viewer> -->
    <section></section>
    {
      items.map((item, index) => (
        <section id={`ss-${index + 1}`}>
          <div class={`wrapper ${item.reversed ? 'reversed' : ''}`}>
            <h2>Contenido</h2>
            <p>aqui va texto referente a la experiencia</p>
          </div>
        </section>
      ))
    }
    <div></div>
  </div>
  <!-- <Preloader /> -->
</Layout>

<script>
  import { Application } from '@splinetool/runtime'
  import { gsap } from 'gsap'
  import { ScrollTrigger } from 'gsap/ScrollTrigger'
  gsap.registerPlugin(ScrollTrigger)

  /* Lenis compatibility */
  /* import Lenis from '@studio-freight/lenis'
  const lenis = new Lenis()
  lenis.on('scroll', ScrollTrigger.update)
  gsap.ticker.add((time) => {
    lenis.raf(time * 1000)
  })
  gsap.ticker.lagSmoothing(0) */

  const cameraScenes = [
    {
      rotation: {
        x: -0,
        y: -0,
        z: -0
      },
      position: {
        x: 0,
        y: 0,
        z: 0
      }
    },
    {
      rotation: {
        x: 0.124,
        y: 0.282,
        z: 0
      },
      position: {
        x: 160.45,
        y: 162.22,
        z: 616.44
      }
    },
    {
      rotation: {
        x: -0.224,
        y: -0.282,
        z: -0
      },
      position: {
        x: -316.14,
        y: 156.99,
        z: 40.03
      }
    },
    {
      rotation: {
        x: 0.124,
        y: 0.282,
        z: 0
      },
      position: {
        x: 160.45,
        y: 162.22,
        z: 100.44
      }
    }
  ]

  const canvas = document.getElementById('canvas3dd') as HTMLCanvasElement
  const app = new Application(canvas)

  app.load('https://prod.spline.design/ayNisUEENs-eGECw/scene.splinecode').then(() => {
    console.log('escena cargadas')
    const camera = app.findObjectByName('Dacamera')
    const eltexto = app.findObjectByName('eltexto')
    console.log('camera', camera)
    console.log('eltexto', eltexto)
    console.log('app', app)

    console.log('break')
    setTimeout(() => {
      gsap.to('#preloader', { clipPath: 'circle(0%)', duration: 2, ease: 'power1.in' })
    }, 100)

    for (let i = 1; i <= 4; i++) {
      gsap.timeline({
        scrollTrigger: {
          trigger: `#ss-${i}`,
          start: '50% 50%',
          end: 'bottom 2%',
          markers: true,
          pin: true,
          onToggle: () => {
            app.setVariable('escena', i)
            console.log('escena spline', app.getVariable('escena'))
          }
        },
        onUpdate: (params) => {}
      })
    }
  })

  /* gsap
      .timeline({
        scrollTrigger: {
          trigger: '#ss-2',
          start: 'center center',
          end: 'bottom 2%',
          scrub: true
        }
      })
      .to(camera?.position, cameraScenes[i - 1].position)
      .to(camera?.rotation, cameraScenes[i - 1].rotation, '<')
    */

  /*  setTimeout(() => {
      console.log('mosusedown')
      //eltexto?.emitEvent('mouseDown')
      app.setVariable('activo', true)
    }, 3000) */
</script>

<style lang="scss">
  canvas {
    /*pointer-events: none;*/
    position: fixed;
    /*  z-index: 10; */
    max-height: 100vh;
  }
  section {
    @apply container grid items-center;
    .wrapper {
      height: fit-content;
      &.reversed {
        text-align: end;
      }
    }
  }
</style>
