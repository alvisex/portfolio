---
import Preloader from '../components/Preloader.astro'
import Layout from '../layouts/Layout.astro'
---

<Layout title="testing scene with hover">
  <div class="wrapper">
    <!--   <section>demo</section> -->
    <canvas id="canvas3dd"></canvas>
    <!--  <script type="module" src="https://unpkg.com/@splinetool/viewer@0.9.517/build/spline-viewer.js"></script>
  <spline-viewer url="https://prod.spline.design/027RUTK2ANG-42Jp/scene.splinecode"></spline-viewer> -->
    <section id="ss-1">demo</section>
    <section id="ss-2">demo</section>
    <section id="ss-3">demo</section>
    <section id="ss-4">demo</section>
    <section id="ss-5">demo</section>
    <div>que onda</div>
  </div>
  <Preloader />
</Layout>

<script>
  import { Application } from '@splinetool/runtime'
  import { gsap } from 'gsap'
  import { ScrollTrigger } from 'gsap/ScrollTrigger'
  gsap.registerPlugin(ScrollTrigger)

  /* Lenis compatibility */
  import Lenis from '@studio-freight/lenis'
  const lenis = new Lenis()
  lenis.on('scroll', ScrollTrigger.update)
  gsap.ticker.add((time) => {
    lenis.raf(time * 1000)
  })
  gsap.ticker.lagSmoothing(0)

  const cameraScenes = [
    {
      rotation: {
        x: -0,
        y: -0,
        z: -0
      },
      position: {
        x: 0,
        y: 0,
        z: 0
      }
    },
    {
      rotation: {
        x: 0.124,
        y: 0.282,
        z: 0
      },
      position: {
        x: 160.45,
        y: 162.22,
        z: 616.44
      }
    },
    {
      rotation: {
        x: -0.224,
        y: -0.282,
        z: -0
      },
      position: {
        x: -316.14,
        y: 156.99,
        z: 40.03
      }
    },
    {
      rotation: {
        x: 0.124,
        y: 0.282,
        z: 0
      },
      position: {
        x: 160.45,
        y: 162.22,
        z: 100.44
      }
    }
  ]

  const canvas = document.getElementById('canvas3dd') as HTMLCanvasElement
  const app = new Application(canvas)

  app.load('https://prod.spline.design/ayNisUEENs-eGECw/scene.splinecode').then(() => {
    console.log('escena cargadas')
    const camera = app.findObjectByName('Dacamera')
    console.log('camera', camera)
    console.log('rotation', camera?.rotation)
    console.log('position', camera?.position)
    console.log('rotation', camera?.rotation)
    console.log('break')
    setTimeout(() => {
      gsap.to('#preloader', { clipPath: 'circle(0%)', duration: 2, ease: 'power1.in' })
    }, 100)

    for (let i = 1; i <= 4; i++) {
      gsap
        .timeline({
          scrollTrigger: {
            trigger: `#ss-${i}`,
            start: '55% 50%',
            end: 'bottom 2%',
            scrub: true,
            markers: true
          },
          onUpdate: (params) => {
            /* console.log('position', camera?.position)
            console.log('rotation', camera?.rotation) */
          }
        })
        .to(camera?.position, cameraScenes[i - 1].position)
        .to(camera?.rotation, cameraScenes[i - 1].rotation, '<')
    }

    /* gsap
      .timeline({
        scrollTrigger: {
          trigger: '#ss-2',
          start: 'center center',
          end: 'bottom 2%',
          scrub: true
        }
      })
      .to(camera?.position, {
        x: 113.27,
        y: -233.98,
        z: 343.25
      })

    gsap
      .timeline({
        scrollTrigger: {
          trigger: '#ss-3',
          start: 'center center',
          end: 'bottom 2%',
          scrub: true
        }
      })
      .to(camera?.position, {
        x: -138.76,
        y: -268.52,
        z: 62.87
      })

    gsap
      .timeline({
        scrollTrigger: {
          trigger: '#ss-4',
          start: 'center center',
          end: 'bottom 2%',
          scrub: true
        }
      })
      .to(camera?.position, {
        x: -150.18,
        y: -274.61,
        z: -498.74
      }) */
  })

  /*  */
</script>

<style>
  canvas {
    /*pointer-events: none;*/
    position: fixed;
    z-index: 10;
    max-height: 100vh;
  }
</style>
